{"version":3,"sources":["component/mymessage.js","component/theirMessage.js","component/messageForm.js","component/chatFeed.js","component/loginForm.jsx","app.js","index.js"],"names":["MyMessage","msg","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMsg","isFirstMsgByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","chatId","creds","handleSubmit","event","preventDefault","value","trim","sendMessage","setValue","useState","onSubmit","placeholder","onChange","target","console","log","isTyping","htmlFor","PictureOutlined","id","type","multiple","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMsg","people","map","person","index","last_read","title","keys","Object","key","lastMsgKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","errMsg","setErrMsg","e","a","authObject","axios","get","headers","login","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3018a1ae.chunk.js","sourcesContent":["const MyMessage = ({msg}) => {\n    // 如果是圖片\n    if(msg?.attachments?.length>0){\n        return <img \n        src={msg.attachments[0].file}\n        alt=\"message-attchments\"\n        className=\"message-img\"\n        style={{float:'right'}}\n        ></img>\n    }\n    return <div className=\"message\" style={{float:'right',marginRight:'18px',color:'white',backgroundColor:'#3B2A50'}}>\n        {msg.text}\n    </div>\n}\n\nexport default MyMessage","const TheirMessage = ({ msg, lastMsg }) => {\n    const isFirstMsgByUser = !lastMsg || lastMsg.sender.username;\n\n    return <div className=\"message-row\">\n        {isFirstMsgByUser && (<div className=\"message-avatar\" style={{ backgroundImage: `url:(${lastMsg?.sender?.avatar})` }}>\n        </div>)}\n        {/* 訊息 start */}\n        {msg?.attachments?.length > 0 ?\n            <img\n                src={msg.attachments[0].file}\n                alt=\"message-attchments\"\n                className=\"message-img\"\n                style={{ marginLeft: isFirstMsgByUser ? '4px' : '48px' }}\n            ></img> :\n            <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMsgByUser ? '4px' : '48px' }}>\n                {msg.text}\n            </div>}\n        {/* 訊息 end */}\n    </div>\n}\n\nexport default TheirMessage","import { useState } from \"react\"\nimport { isTyping, sendMessage } from \"react-chat-engine\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\n\nconst MessageForm = (props) => {\n    const { chatId, creds } = props;\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const text = value.trim();\n        if (text.length > 0) { sendMessage(creds, chatId, { text }); }\n        setValue('')\n    }\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        console.log(props);\n        isTyping(creds, chatId)\n    }\n\n    const handleUpload = (event) => {\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\n    }\n\n    const [value, setValue] = useState('');\n    return <div>\n        <form className=\"message-form\" onSubmit={handleSubmit}>\n            <input\n                className=\"message-input\"\n                placeholder=\"Send a message...\"\n                value={value}\n                onChange={handleChange}\n                onSubmit={handleSubmit}></input>\n            {/* upload file start */}\n            <label htmlFor=\"upload-button\">\n                <span><PictureOutlined className=\"picture-icon\"></PictureOutlined></span>\n            </label>\n            <input id=\"upload-button\" type=\"file\"\n                multiple={false} style={{ display: 'none' }}\n                onChange={handleUpload}></input>\n            {/* upload file end */}\n            <button type=\"submit\" className=\"send-button\">\n                <SendOutlined className=\"send-icon\"></SendOutlined>\n            </button>\n        </form>\n    </div>\n}\n\nexport default MessageForm","import MyMessage from './mymessage';\nimport TheirMessage from './theirMessage';\nimport MessageForm from './messageForm';\n\n\nconst ChatFeed = (props) => {\n    // chats所有聊天室, activeChat身處聊天室, messages身處聊天室所有訊息\n    const { chats, activeChat, userName, messages } = props;\n    // console.log(Object.keys(messages));\n    // 目前點中聊天室\n    const chat = chats && chats[activeChat];\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n        return keys.map((key, index) => {\n            const msg = messages[key];\n            // TODO:lastMsgKey怎麼來的不知道\n            const lastMsgKey = index === 0 ? null : keys[index - 1];\n            const isMyMsg = userName === msg.sender.username;\n            return (\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\n                    <div className=\"message-block\">\n                        {isMyMsg ? <MyMessage msg={msg}></MyMessage> : <TheirMessage msg={msg} lastMsg={messages[lastMsgKey]}></TheirMessage>}\n                    </div>\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMsg ? '18px' : '0px', marginLeft: isMyMsg ? '0px' : '68px' }}>\n                        {renderReadReceipts(msg, isMyMsg)}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    // read receipts\n    const renderReadReceipts = (msg, isMyMsg) => {\n        // console.log(msg, isMyMsg);\n        return chat.people.map((person, index) => {\n            return person.last_read === msg.id && (\n                <div key={`read_${index}`} className=\"read-receipt\" style={{ float: isMyMsg ? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar})` }}>{person?.person?.avatar ? '' : person.person.username}</div>\n            )\n        })\n    }\n\n    if (!chat) return 'Loading...';\n    return <div className=\"chat-feed\">\n        <div className=\"chat-title-container\">\n            <div className=\"chat-title\">{chat.title}</div>\n            <div className=\"sub-title\">\n                {chat.people.map(person =>\n                    `${person.person.username}`\n                )}\n            </div>\n        </div>\n        {renderMessages()}\n        <div style={{ height: '100px' }}>分隔線</div>\n        {/* 輸入區start */}\n        <div className=\"message-form-container\">\n            <MessageForm {...props} chatId={activeChat}></MessageForm>\n        </div>\n    </div>\n}\n\nexport default ChatFeed","import axios from \"axios\";\nimport { useState } from \"react\";\n\nconst LoginForm = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();// 避免網頁重整\n        const authObject = { 'Project-ID': 'b6f3cede-3852-4965-9eae-849d9ad42881', 'User-Name': username, 'User-Secret': password }\n\n        try {\n            const login = await axios.get('https://api.chatengine.io/chats', { headers: authObject })\n\n            localStorage.setItem('username', username);\n            localStorage.setItem('password', password);\n            console.log(login);\n            window.location.reload();\n        } catch (error) {\n            console.log(error);\n            const errMsg = '帳號密碼錯誤'\n            setErrMsg(errMsg);\n        }\n    }\n\n    return (<div className=\"wrapper\">\n        <div className=\"form\">\n            <h1 className=\"title\">Chat Application</h1>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"username\" required ></input>\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"password\" required ></input>\n                <div align=\"center\" >\n                    <button type=\"submit\" className=\"button\"><span>\n                        Start Chatting\n                    </span></button>\n                </div>\n                <div className=\"error\">{errMsg}</div>\n            </form>\n        </div>\n    </div>)\n}\n\nexport default LoginForm","import { ChatEngine } from 'react-chat-engine';\nimport './app.css';\nimport ChatFeed from './component/chatFeed';\nimport LoginForm from './component/loginForm';\n\nconst App = () => {\n    if (!localStorage.getItem('username')) {\n        return <LoginForm></LoginForm>\n    }\n\n    return <ChatEngine\n        height=\"100vh\"\n        projectID=\"b6f3cede-3852-4965-9eae-849d9ad42881\"\n        userName={localStorage.getItem('username')}\n        userSecret={localStorage.getItem('password')}\n        renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps}></ChatFeed>}\n    ></ChatEngine>\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}